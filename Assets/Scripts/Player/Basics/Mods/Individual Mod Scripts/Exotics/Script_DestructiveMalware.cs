using NUnit.Framework;
using StarterAssets;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;

public class Script_DestructiveMalware : MonoBehaviour, I_Mods
{
    public I_Mods.Rarity rarity { get => _rarity; set => _rarity = value; }
    public string modName { get => _modName; set => _modName = value; }
    public string modDescription { get => _modDescription; set => _modDescription = value; }
    public Sprite modIcon { get => _modIcon; set => _modIcon = value; }

    [SerializeField] Sprite _modIcon;
    string _modName;
    string _modDescription;
    [SerializeField] I_Mods.Rarity _rarity;

    private void Start()
    {
        rarity = I_Mods.Rarity.EXOTIC;

        modName = "DESTRUCTIVE MALWARE";
        modDescription = "On pickup, this mod destroys itself and every mod currently equiped permanently. For each mod destroyed, gain a permanent buff to damage, movement speed, weapon handling, health regen, and rate of fire based on mod rarity!";
    }

    public void Activate()
    {
        DestoryUpgrade();
    }

    public void Deactivate()
    {
        return;
    }

    public void DestoryUpgrade()
    {
        float percentIncrease = 0;
        float percentDecrease = 0;


        Script_ScrapMenu scrapHandler = GameObject.FindGameObjectWithTag("Mechanic").GetComponentInChildren<Script_Mechanic>().GetScrapHandler();
        List<I_Mods> modsToRemove = new List<I_Mods>();

        foreach (I_Mods mod in scrapHandler.GetActiveMods())
        {
            switch (mod.rarity)
            {
                case I_Mods.Rarity.Common:
                    percentIncrease += 0.2f;
                    percentDecrease += 0.05f;
                    break;
                case I_Mods.Rarity.Rare:
                    percentIncrease += 0.4f;
                    percentDecrease += 0.1f;
                    break;
                case I_Mods.Rarity.Epic:
                    percentIncrease += 0.6f;
                    percentDecrease += 0.2f;
                    break;
                case I_Mods.Rarity.Legendary:
                    percentIncrease += 1f;
                    percentDecrease += 0.3f;
                    break;
                case I_Mods.Rarity.EXOTIC:
                    percentIncrease += 2f;
                    percentDecrease += 0.5f;
                    break;
            }

            mod.Deactivate();
            modsToRemove.Add(mod);
        }

        scrapHandler.SetMods(scrapHandler.GetMods().Except(modsToRemove).ToList());
        scrapHandler.GetActiveMods().Clear();

        if (percentDecrease > 0.8f)
        {
            percentDecrease = 0.8f;
        }

        GameObject.FindGameObjectWithTag("LocalPlayer").GetComponentInChildren<Pistol>().UpgradeDamage(percentIncrease);
        GameObject.FindGameObjectWithTag("LocalPlayer").GetComponent<Script_BaseStats>().UpgradeHealth(150 * percentIncrease);
        GameObject.FindGameObjectWithTag("LocalPlayer").GetComponentInChildren<Pistol>().UpgradeReloadSpeed(percentIncrease);
        GameObject.FindGameObjectWithTag("LocalPlayer").GetComponent<FirstPersonController>().UpgradeSpeed(percentIncrease);
        GameObject.FindGameObjectWithTag("LocalPlayer").GetComponent<Script_BaseStats>().UpgradeRegenTime(percentDecrease);
        GameObject.FindGameObjectWithTag("LocalPlayer").GetComponentInChildren<Pistol>().UpgradeFireRate(percentIncrease);

        scrapHandler.GetMods().Remove(this);
        scrapHandler.GetActiveMods().Remove(this);
    }
}
